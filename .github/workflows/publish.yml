name: Test
on:
  push:
  pull_request:
jobs:
  is_release:
    runs-on: ubuntu-latest
    outputs:
      type: ${{ steps.get_type.outputs.type }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: get_type
        run: echo $( git tag --points-at HEAD | grep -q -e '^.*@.*$' && echo 'type=::release::' || echo "type=::norelease::" ) >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: start-measurement

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install
      - run: npm run test

      - name: Execution Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: get-measurement
          label: "Test Execution"

      - name: Save JSON Output
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-results
          path: eco_ci_output.json

  test_legacy:
    needs: [is_release]
    if: ${{ needs.is_release.outputs.type == '::norelease::' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: start-measurement

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          cwd=`pwd`
          for pkg in packages/*/package.json; do
            cd $cwd/`dirname $pkg`
            npm install
            npm run test:legacy;
          done

      - name: Execution Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: get-measurement
          label: "Legacy Test Execution"

      - name: Save JSON Output
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-legacy-results
          path: eco_ci_output.json

  publish:
    needs: [is_release, test]
    if: ${{ needs.is_release.outputs.type == '::release::' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: start-measurement

      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"

      - run: npm ci
      - run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Execution Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          task: get-measurement
          label: "Publish Execution"

      - name: Save JSON Output
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-publish-results
          path: eco_ci_output.json
